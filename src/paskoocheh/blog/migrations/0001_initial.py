# Generated by Django 3.2.23 on 2024-03-27 19:25

import blog.models
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import markdownx.models
import paskoocheh.helpers
import tools.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('preferences', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_modified_date', models.DateTimeField(auto_now=True, verbose_name='Last Modified Time')),
                ('name', models.CharField(max_length=32, verbose_name='Category Name (English)')),
                ('name_ar', models.CharField(blank=True, max_length=32, null=True, verbose_name='Category Name (Arabic)')),
                ('name_fa', models.CharField(max_length=32, null=True, verbose_name='Category Name (Farsi)')),
                ('slug', models.SlugField(max_length=128, null=True, unique=True, validators=[paskoocheh.helpers.validate_slug_strict])),
                ('logo', models.ImageField(blank=True, help_text='Note: This is currently unused.', null=True, upload_to=blog.models.get_category_logo_upload_to, verbose_name='Photo')),
                ('description', models.TextField(help_text='Not displayed on site, but used as social media description and search engine snippet suggestion for blog category pages.', null=True, verbose_name='Description')),
            ],
            options={
                'verbose_name_plural': 'Categories',
            },
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment_date', models.DateTimeField(auto_now=True, verbose_name='Comment Date')),
                ('email', models.CharField(max_length=256, verbose_name='Email')),
                ('name', models.CharField(max_length=256, verbose_name='Name')),
                ('title', models.CharField(max_length=512, verbose_name='Title')),
                ('content', models.TextField(verbose_name='Content')),
                ('approved', models.BooleanField(default=False, verbose_name='Approved')),
            ],
        ),
        migrations.CreateModel(
            name='Post',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_modified_date', models.DateTimeField(auto_now=True, verbose_name='Last Modified Time')),
                ('title', models.CharField(max_length=256, verbose_name='Title')),
                ('content', markdownx.models.MarkdownxField(null=True, verbose_name='Content')),
                ('tag', models.TextField(blank=True, help_text='Note: This field is currently only used for search relevance. It isn’t displayed on the site.', max_length=8192, null=True, verbose_name='Tags')),
                ('published_date', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Published Date')),
                ('published_date_is_final', models.BooleanField(default=False)),
                ('summary', models.TextField(help_text='Used for post listing previews if the post has no associated featured image. Also appears in RSS feeds, social media preview, and search engine snippets.', null=True, verbose_name='Summary')),
                ('slug', models.SlugField(max_length=128, unique=True, validators=[paskoocheh.helpers.validate_slug_strict])),
                ('status', models.CharField(choices=[('p', 'Published'), ('d', 'Draft')], default='d', max_length=1)),
                ('comment_allowed', models.BooleanField(default=False, help_text='Note: Comments aren’t currently supported, but this may change in the future.', verbose_name='Comments Allowed')),
                ('homepage_feature', models.PositiveIntegerField(blank=True, help_text='If set, the post will be considered featured. Featured posts with lower feature orders will appear earlier in featured lists.', null=True, unique=True, verbose_name='Feature Order')),
                ('feature_image', models.ImageField(blank=True, help_text='Feature images should have a 2.5:1 aspect ratio (e.g. 800x320). This target ratio can be changed with minor changes to the site, but it needs to be consistent across all blog posts.', null=True, upload_to=blog.models.get_post_feature_image_upload_to, verbose_name='Featured Image')),
                ('feature_image_caption', models.CharField(blank=True, help_text='Text describing the image (for screen readers and search engines)', max_length=2048, null=True, verbose_name='Featured Image Description')),
                ('language', models.CharField(choices=[('en', 'English'), ('fa', 'Persian'), ('ar', 'Arabic')], default='fa', max_length=2, verbose_name='Language')),
                ('video', models.FileField(blank=True, help_text='Once the file to be uploaded has been saved, an HTML code snippet will be provided.', null=True, upload_to=tools.models.get_video_upload_to, verbose_name='Video File')),
                ('author', models.ForeignKey(help_text='Note: The post‘s associated user is not currently displayed on the site, but this may change in the future.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='review', to=settings.AUTH_USER_MODEL, verbose_name='User')),
                ('category', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='post', to='blog.category', verbose_name='Category')),
                ('tags', models.ManyToManyField(blank=True, related_name='posts', to='preferences.Tag', verbose_name='Tags')),
            ],
            options={
                'verbose_name': 'Post',
                'verbose_name_plural': 'Posts',
            },
        ),
    ]
