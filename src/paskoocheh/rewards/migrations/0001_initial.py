# Generated by Django 3.2.23 on 2024-03-27 19:25

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import wagtail.blocks
import wagtail.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('wagtailcore', '0078_referenceindex'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='EarningMethod',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, null=True, verbose_name='Date created')),
                ('updated', models.DateTimeField(auto_now=True, null=True, verbose_name='Date updated')),
                ('earning_method', models.CharField(choices=[('review', 'App Review'), ('quiz_completed', 'Weekly Challenge Completed'), ('quiz_won', 'Weekly Challenge Won'), ('update', 'Apps Update'), ('referral', "Friend's Referral")], max_length=200, unique=True)),
                ('earning_points', models.PositiveIntegerField(default=0)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='QuizPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.page')),
                ('questions', wagtail.fields.StreamField([('question', wagtail.blocks.StructBlock([('question', wagtail.blocks.TextBlock()), ('answers', wagtail.blocks.StreamBlock([('answer', wagtail.blocks.StructBlock([('answer', wagtail.blocks.CharBlock()), ('correct', wagtail.blocks.BooleanBlock(required=False))], icon='comment'))]))], icon='help'))], use_json_field=True)),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='QuizzesIndexPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.page')),
                ('description', wagtail.fields.RichTextField()),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='RedemptionMethod',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, null=True, verbose_name='Date created')),
                ('updated', models.DateTimeField(auto_now=True, null=True, verbose_name='Date updated')),
                ('redemption_method_en', models.CharField(max_length=200, unique=True)),
                ('redemption_method_fa', models.CharField(max_length=200, unique=True)),
                ('redemption_points', models.PositiveIntegerField(default=0)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='UserRewardsRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, null=True, verbose_name='Date created')),
                ('updated', models.DateTimeField(auto_now=True, null=True, verbose_name='Date updated')),
                ('earning_method', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rewards_records', to='rewards.earningmethod')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rewards_records', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'User Rewards Record',
                'verbose_name_plural': 'Users Rewards Records',
            },
        ),
        migrations.CreateModel(
            name='ReferralLink',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, null=True, verbose_name='Date created')),
                ('updated', models.DateTimeField(auto_now=True, null=True, verbose_name='Date updated')),
                ('referral_slug', models.SlugField(max_length=64)),
                ('times_referred', models.PositiveIntegerField(default=0)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='referral_links', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='AdminRewardsRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, null=True, verbose_name='Date created')),
                ('updated', models.DateTimeField(auto_now=True, null=True, verbose_name='Date updated')),
                ('method_type', models.CharField(choices=[('earn', 'Earn'), ('redeem', 'Redeem')], max_length=10)),
                ('points', models.PositiveIntegerField(default=0)),
                ('description', models.CharField(max_length=250)),
                ('admin', models.ForeignKey(limit_choices_to={'is_staff': True}, on_delete=django.db.models.deletion.PROTECT, related_name='user_rewards', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='admin_rewards', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Admin Rewards Record',
                'verbose_name_plural': 'Admin Rewards Records',
            },
        ),
        migrations.CreateModel(
            name='QuizResult',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('completed', models.DateTimeField(auto_now_add=True)),
                ('won', models.BooleanField(default=False)),
                ('quiz', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='results', to='rewards.quizpage')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='quizzes', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('user', 'quiz')},
            },
        ),
    ]
